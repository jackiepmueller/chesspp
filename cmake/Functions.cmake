function(find_boost)
    set(BOOST_ROOT "/src/boost")
    find_package(Boost REQUIRED)
    set(BOOST_INCLUDE ${Boost_INCLUDE_DIRS} PARENT_SCOPE)
endfunction()

function(header_library target)
    cmake_parse_arguments(HEADER_LIBRARY "" "" "" ${ARGN})
    add_library(${target} INTERFACE)
    target_link_libraries(${target} PRIVATE ${HEADER_LIBRARY_UNPARSED_ARGUMENTS})
    target_include_directories(${target} INTERFACE ${CMAKE_CURRENT_SOURCE_DIR} ${BOOST_INCLUDE})
endfunction()

function(library target)
    cmake_parse_arguments(LIBRARY "" "" "" ${ARGN})
    file(GLOB ${target}_SOURCES "*.cpp")
    add_library(${target} SHARED ${${target}_SOURCES})
    target_link_libraries(${target} PRIVATE ${LIBRARY_UNPARSED_ARGUMENTS})
    target_include_directories(${target} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${BOOST_INCLUDE})
endfunction()

function(executable target)
    cmake_parse_arguments(EXECUTABLE "" "" "" ${ARGN})
    file(GLOB ${target}_SOURCES "*.cpp")
    add_executable(${target} ${${target}_SOURCES})
    target_link_libraries(${target} PRIVATE ${EXECUTABLE_UNPARSED_ARGUMENTS})
    target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} ${BOOST_INCLUDE})
endfunction()
